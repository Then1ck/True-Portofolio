package weapon;

import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.IOException;

import javax.imageio.ImageIO;

import mainPanel.Camera;

public class Projectiles {
	private double Speed, locX, locY;
	private double SpeedX, SpeedY;
	private Camera Cams;
	private BufferedImage projectileArt;
	public Projectiles(int posX, int posY, int targetX, int targetY, Camera cams) {
//		System.out.println(posX + "/" + posY + "/" + targetX + "/" + targetY);
		Speed = 20;
		if(targetX-posX==0) {
			SpeedY = Speed;
			SpeedX = 0;
		}else {
			double m = (double)(targetY-posY)/(double)(targetX-posX);//if x = 1, y = m;
			double temp = Speed*Speed;
			double temp2 = 1+(m*m);
			double c = Math.sqrt(temp/temp2);
			System.out.println(temp + " " + temp2 + " " + m + " " + c);
			SpeedX = c;
			SpeedY = m*c;
		}
		
		if(targetX < posX) {
			SpeedX = -SpeedX;
			SpeedY = -SpeedY;
		}
		
		locX = posX;
		locY = posY;
		Cams = cams;
		try {
			projectileArt = ImageIO.read(getClass().getResourceAsStream("/entity/Striker.png"));
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	public void update() {
		locX += SpeedX;
		locY += SpeedY;
	}
	
	public void draw(Graphics2D g2) {
		g2.drawImage(projectileArt, (int)locX-Cams.getCamX()-16, (int)locY-Cams.getCamY()-16, 32, 32, null);
	}
	
	public void printV() {
		System.out.println(SpeedX + " " + SpeedY);
	}
}
